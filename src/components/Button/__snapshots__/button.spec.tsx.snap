// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Given - Button component and props are: {"title":"Button","variant":"contained","color":"black","style":{"button":{"marginBottom":21}},"loading":false} should render correctly and match snapshot 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": false,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "#1C1B1B",
      "borderRadius": 10,
      "justifyContent": "center",
      "marginBottom": 21,
      "opacity": 1,
      "paddingHorizontal": 45,
      "paddingVertical": 26.5,
      "width": "100%",
    }
  }
>
  <Text
    style={
      [
        {
          "color": "#1C1B1B",
          "fontSize": 26,
          "fontWeight": "normal",
          "lineHeight": 32,
        },
        {
          "color": "#ffffff",
        },
      ]
    }
  >
    Button
  </Text>
</View>
`;

exports[`Given - Button component and props are: {"title":"Button","variant":"contained","color":"black","style":{"button":{"marginBottom":21}},"loading":true} should render correctly and match snapshot 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": true,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "#1C1B1B",
      "borderRadius": 10,
      "justifyContent": "center",
      "marginBottom": 21,
      "opacity": 1,
      "paddingHorizontal": 45,
      "paddingVertical": 26.5,
      "width": "100%",
    }
  }
>
  <ActivityIndicator
    color="#ffffff"
    size={18}
  />
</View>
`;

exports[`Given - Button component and props are: {"title":"Button","variant":"contained","color":"darkGrey","style":{"button":{"marginBottom":21}},"loading":false} should render correctly and match snapshot 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": false,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "#CCCCCC",
      "borderRadius": 10,
      "justifyContent": "center",
      "marginBottom": 21,
      "opacity": 1,
      "paddingHorizontal": 45,
      "paddingVertical": 26.5,
      "width": "100%",
    }
  }
>
  <Text
    style={
      [
        {
          "color": "#1C1B1B",
          "fontSize": 26,
          "fontWeight": "normal",
          "lineHeight": 32,
        },
        {
          "color": "#ffffff",
        },
      ]
    }
  >
    Button
  </Text>
</View>
`;

exports[`Given - Button component and props are: {"title":"Button","variant":"contained","color":"darkGrey","style":{"button":{"marginBottom":21}},"loading":true} should render correctly and match snapshot 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": true,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "#CCCCCC",
      "borderRadius": 10,
      "justifyContent": "center",
      "marginBottom": 21,
      "opacity": 1,
      "paddingHorizontal": 45,
      "paddingVertical": 26.5,
      "width": "100%",
    }
  }
>
  <ActivityIndicator
    color="#ffffff"
    size={18}
  />
</View>
`;

exports[`Given - Button component and props are: {"title":"Button","variant":"contained","color":"primary","style":{"button":{"marginBottom":21}},"loading":false} should render correctly and match snapshot 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": false,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "#FF4334",
      "borderRadius": 10,
      "justifyContent": "center",
      "marginBottom": 21,
      "opacity": 1,
      "paddingHorizontal": 45,
      "paddingVertical": 26.5,
      "width": "100%",
    }
  }
>
  <Text
    style={
      [
        {
          "color": "#1C1B1B",
          "fontSize": 26,
          "fontWeight": "normal",
          "lineHeight": 32,
        },
        {
          "color": "#ffffff",
        },
      ]
    }
  >
    Button
  </Text>
</View>
`;

exports[`Given - Button component and props are: {"title":"Button","variant":"contained","color":"primary","style":{"button":{"marginBottom":21}},"loading":true} should render correctly and match snapshot 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": true,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "#FF4334",
      "borderRadius": 10,
      "justifyContent": "center",
      "marginBottom": 21,
      "opacity": 1,
      "paddingHorizontal": 45,
      "paddingVertical": 26.5,
      "width": "100%",
    }
  }
>
  <ActivityIndicator
    color="#ffffff"
    size={18}
  />
</View>
`;

exports[`Given - Button component and props are: {"title":"Button","variant":"outlined","color":"black","style":{"button":{"marginBottom":21}},"loading":false} should render correctly and match snapshot 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": false,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "#ffffff",
      "borderColor": "#1C1B1B",
      "borderRadius": 10,
      "borderWidth": 2,
      "justifyContent": "center",
      "marginBottom": 21,
      "opacity": 1,
      "paddingHorizontal": 45,
      "paddingVertical": 26.5,
      "width": "100%",
    }
  }
>
  <Text
    style={
      [
        {
          "color": "#1C1B1B",
          "fontSize": 26,
          "fontWeight": "normal",
          "lineHeight": 32,
        },
        {
          "color": "#1C1B1B",
        },
      ]
    }
  >
    Button
  </Text>
</View>
`;

exports[`Given - Button component and props are: {"title":"Button","variant":"outlined","color":"black","style":{"button":{"marginBottom":21}},"loading":true} should render correctly and match snapshot 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": true,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "#ffffff",
      "borderColor": "#1C1B1B",
      "borderRadius": 10,
      "borderWidth": 2,
      "justifyContent": "center",
      "marginBottom": 21,
      "opacity": 1,
      "paddingHorizontal": 45,
      "paddingVertical": 26.5,
      "width": "100%",
    }
  }
>
  <ActivityIndicator
    color="#1C1B1B"
    size={18}
  />
</View>
`;

exports[`Given - Button component and props are: {"title":"Button","variant":"outlined","color":"darkGrey","style":{"button":{"marginBottom":21}},"loading":false} should render correctly and match snapshot 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": false,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "#ffffff",
      "borderColor": "#CCCCCC",
      "borderRadius": 10,
      "borderWidth": 2,
      "justifyContent": "center",
      "marginBottom": 21,
      "opacity": 1,
      "paddingHorizontal": 45,
      "paddingVertical": 26.5,
      "width": "100%",
    }
  }
>
  <Text
    style={
      [
        {
          "color": "#1C1B1B",
          "fontSize": 26,
          "fontWeight": "normal",
          "lineHeight": 32,
        },
        {
          "color": "#CCCCCC",
        },
      ]
    }
  >
    Button
  </Text>
</View>
`;

exports[`Given - Button component and props are: {"title":"Button","variant":"outlined","color":"darkGrey","style":{"button":{"marginBottom":21}},"loading":true} should render correctly and match snapshot 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": true,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "#ffffff",
      "borderColor": "#CCCCCC",
      "borderRadius": 10,
      "borderWidth": 2,
      "justifyContent": "center",
      "marginBottom": 21,
      "opacity": 1,
      "paddingHorizontal": 45,
      "paddingVertical": 26.5,
      "width": "100%",
    }
  }
>
  <ActivityIndicator
    color="#CCCCCC"
    size={18}
  />
</View>
`;

exports[`Given - Button component and props are: {"title":"Button","variant":"outlined","color":"primary","style":{"button":{"marginBottom":21}},"loading":false} should render correctly and match snapshot 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": false,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "#ffffff",
      "borderColor": "#FF4334",
      "borderRadius": 10,
      "borderWidth": 2,
      "justifyContent": "center",
      "marginBottom": 21,
      "opacity": 1,
      "paddingHorizontal": 45,
      "paddingVertical": 26.5,
      "width": "100%",
    }
  }
>
  <Text
    style={
      [
        {
          "color": "#1C1B1B",
          "fontSize": 26,
          "fontWeight": "normal",
          "lineHeight": 32,
        },
        {
          "color": "#FF4334",
        },
      ]
    }
  >
    Button
  </Text>
</View>
`;

exports[`Given - Button component and props are: {"title":"Button","variant":"outlined","color":"primary","style":{"button":{"marginBottom":21}},"loading":true} should render correctly and match snapshot 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": true,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "#ffffff",
      "borderColor": "#FF4334",
      "borderRadius": 10,
      "borderWidth": 2,
      "justifyContent": "center",
      "marginBottom": 21,
      "opacity": 1,
      "paddingHorizontal": 45,
      "paddingVertical": 26.5,
      "width": "100%",
    }
  }
>
  <ActivityIndicator
    color="#FF4334"
    size={18}
  />
</View>
`;
