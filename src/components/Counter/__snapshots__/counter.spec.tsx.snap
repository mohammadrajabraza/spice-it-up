// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Given - CounterStory component and without props should render correctly and match snapshot 1`] = `
<View
  style={
    [
      {
        "alignItems": "center",
        "flexDirection": "row",
        "gap": 6,
      },
      {},
    ]
  }
>
  <View
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": true,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "alignItems": "center",
        "backgroundColor": "#FF433411",
        "borderRadius": 9,
        "height": 60,
        "justifyContent": "center",
        "opacity": 1,
        "width": 60,
      }
    }
  >
    <
      height={19}
      width={19}
    />
  </View>
  <Text
    style={
      [
        {
          "color": "#3B3B3B",
          "fontSize": 19,
          "fontWeight": "normal",
          "letterSpacing": 0.5,
        },
        {},
      ]
    }
  >
    1
  </Text>
  <View
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": undefined,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "alignItems": "center",
        "backgroundColor": "#FF4334",
        "borderRadius": 9,
        "height": 60,
        "justifyContent": "center",
        "opacity": 1,
        "width": 60,
      }
    }
  >
    <
      height={19}
      width={19}
    />
  </View>
</View>
`;
